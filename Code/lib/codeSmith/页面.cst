<%-- 
Name: 数据库实体类
Author: B哥
Description: 数据库实体类
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" ResponseEncoding="UTF-8" Debug="False" Description="生成数据库实体" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="属性" Description="要生成实体的数据表" %>
<%@ Property Name="opuser" Type="System.String" Default="" Optional="False" Category="属性" Description="请输入您的名字" %>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.IO" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>

<div id="datagrid1" class="mini-datagrid" url="/Archives/SearchEmployeeArchiveList"
    style="width: 100%; height: 100%;" idfield="id" allowresize="false" sizelist="[20,30,50,100]"
    pagesize="20" multiselect="true">
    <div property="columns">
        <div type="indexcolumn" width="30">
        </div>
        <div type="checkcolumn" width="30">
        </div>
		<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
        <div field="<%= StringUtil.ToPascalCase(column.Name) %>" headeralign="center" align="center" width="60"><%= StringUtil.ToPascalCase(column.Name) %></div>
		<%}%>
        <div name="action" width="120" headeralign="center" align="center" renderer="onActionRenderer" cellstyle="padding:0;">管理</div>
    </div>
</div>


//////////////////////////////////////////////////////////////////////////////////////////////

<table class="edittable" border="1" cellpadding="0" cellspacing="0">
	<% for(int i=0;i<this.SourceTable.Columns.Count;i++){ %>
		<%if(i%3==0){%>
	</tr>
	<tr>
		<%}%>
		<td style="width: 60px;">
            <%=StringUtil.ToPascalCase(this.SourceTable.Columns[i].Description)%>:
        </td>
        <td style="width: 140px;">
            <input name="<%=StringUtil.ToPascalCase(this.SourceTable.Columns[i].Name)%>" value="@Model.<%=StringUtil.ToPascalCase(this.SourceTable.Columns[i].Name)%>" class="mini-textbox" required="true"/>
        </td>
	<%}%>

</table>


using System;
using NSH.Core.Domain;
namespace ccc
{
	///<summary>
	///表<%= this.SourceTable.Name %>的实体类
	///</summary>
	public class <%= StringUtil.ToPascalCase(this.SourceTable.Name) %> : EntityGUIDBase, IAggregateRootGUID
	{
		<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
		/// <summary>
		/// <%= column.Description.Trim('\n').Trim('\r') %>
		/// </summary>
		public virtual <%= CSharpAlias[column.SystemType.FullName] %> <%= StringUtil.ToPascalCase(column.Name) %>{get ; set; }
		
		<% } %>
		protected override void Validate()
        {
        }
		///实体复制
		public <%= StringUtil.ToPascalCase(this.SourceTable.Name) %> Clone()
        {
            return (<%= StringUtil.ToPascalCase(this.SourceTable.Name) %>)this.MemberwiseClone();
        }
	}
	 
}


<script runat="template">
private string _savefile;
[Editor(typeof(FileNameEditor),typeof(System.Drawing.Design.UITypeEditor)),FileDialogAttribute(FileDialogType.Save,Title="save as",Filter="C# File|(*.cs)")]
public string SaveFile
{
   get
   {
    return _savefile;
   }
   set
   {
    _savefile = value;
   }
}
public override void Render(TextWriter tw)
{
   StreamWriter fs1 = new StreamWriter(_savefile,true);
   this.Response.AddTextWriter(fs1);
   base.Render(tw);
   fs1.Close();
}
</script>